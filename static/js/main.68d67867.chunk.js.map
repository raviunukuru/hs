{"version":3,"sources":["redux/actions/types.ts","redux/reducers/AppReducer.ts","redux/reducers/BlockchainReducer.ts","redux/reducers/index.ts","redux/sagas/index.ts","redux/store/index.ts","redux/actions/BlockchainActions.ts","assets/thumb_image.png","assets/minus.svg","assets/plus.svg","assets/Goblin.gif","components/Dashboard/DashboardMain.tsx","components/layout/Header/Header.tsx","screens/Dashboard/Dashboard.tsx","routes/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["INIT_APP","LOGIN_REQUEST","LOGIN_SUCCESS","initialState","loader","username","password","reducer","state","action","type","types","payload","blockchainState","loading","account","Testing123","web3","errorMsg","blockchainReducer","combineReducers","blockchain","app","AppReducer","sagas","all","loggerMiddleware","createLogger","predicate","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","thunk","run","intContract","dispatch","a","window","ethereum","Web3","TestingContract","NetworkData","Testing123Obj","eth","Contract","address","console","log","contractSuccess","isMobile","alert","connectSuccess","connectFailed","updateAccountRequest","updateAccount","DashboardMain","useDispatch","useSelector","useState","loding","setLoding","number","setNumber","soldOut","amountNft","setamountNft","nftprice","setpriceNft","settotalfree","variant","message","alertMsg","setAlertMsg","useEffect","getNftPrice","methods","price","call","amountNft1","Number","getTotalSupply","totalSupply","totalFree","totalfree","mintNft","amounts1","utils","toWei","toString","mint","send","from","value","on","hash","waitForReceipt","response","status","msg","error","receipt","cb","getTransactionReceipt","err","setTimeout","className","Container","Row","Col","sm","md","src","goblinGif","Alert","disabled","onClick","decreamentNum","minus","alt","increamentNum","plus","e","preventDefault","connect","request","method","accounts","location","reload","xs","goblinekdz","href","target","Header","setNavbar","addEventListener","changeBackground","scrollY","id","xmlns","x","y","width","height","viewBox","style","fill","fillRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeDashoffset","fontFamily","fontWeight","fontSize","textAnchor","mixBlendMode","d","slice","length","Dashboard","AppMain","fallback","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68d67867.chunk.js","sourcesContent":["export const INIT_APP = 'INIT_APP';\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';","import * as types from '../actions/types';\n\nexport interface appStateIF {\n    loader: boolean;\n    username: string | null;\n    password: string | null;\n}\n\nconst initialState: appStateIF = {\n    loader: false,\n    username: null,\n    password: null\n};\n\nconst reducer = (state = initialState, action: any) => {\n    switch (action.type) {\n        case types.INIT_APP:\n            return { ...state, ...action.payload, loader: false };\n        case types.LOGIN_REQUEST:\n            return { ...state, loader: true };\n        case types.LOGIN_SUCCESS:\n            return { ...state, loader: false };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","\nexport interface blockchainStateIF {\n    loading: boolean;\n    account: string | null;\n    Testing123: any | null;\n    web3: any | null;\n    errorMsg: string | '';\n}\n\nconst blockchainState : blockchainStateIF = {\n    loading: false,\n    account: null,\n    Testing123: null,\n    web3: null,\n    errorMsg: \"\" \n};\n  \nconst blockchainReducer = (state = blockchainState, action:any) => {\n    switch(action.type){\n        case \"CONNECTION_REQUEST\":\n            return {\n                ...blockchainState,\n                loading: true,\n            };\n        case \"CONTRACT_SUCCESS\":\n            return {\n                ...state,\n                loading: false,\n                Testing123: action.payload.Testing123,\n            };\n        case \"CONNECTION_SUCCESS\":\n            return {\n                ...state,\n                loading: false,\n                account: action.payload.account,\n                web3: action.payload.web3,\n            };\n        case \"CONNECTION_FAILED\":\n            return {\n                ...blockchainState,\n                loading: false,\n                errorMsg: action.payload,\n            };\n        case \"UPDATE_ACCOUNT\":\n            return {\n                ...state,\n                account: action.payload.account,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default blockchainReducer;","import { combineReducers } from 'redux';\nimport AppReducer, { appStateIF } from './AppReducer';\nimport blockchainReducer, { blockchainStateIF } from './BlockchainReducer';\n\nexport interface ReducerStateIF {\n    blockchain: blockchainStateIF;\n    app: appStateIF;\n}\nexport default combineReducers({\n    blockchain: blockchainReducer,\n    app: AppReducer\n});\n","import { all } from 'redux-saga/effects';\n\nexport default function* sagas() {\n    yield all([]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport thunk from 'redux-thunk';\n\nimport reducers from '../reducers';\nimport sagas from '../sagas';\n\n// middleware that logs actions\nconst loggerMiddleware = createLogger({ predicate: () => true });\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    reducers,\n    applyMiddleware(loggerMiddleware, thunk, sagaMiddleware)\n);\n\n// run the saga\nsagaMiddleware.run(sagas);\n\nexport default store;\n","// constants\nimport Web3 from \"web3\";\nimport * as TestingContract from '../../contracts/Testing123.json';\nimport { isMobile } from 'react-device-detect';\n\ndeclare let window: any;\n\n\nexport const intContract = () => {\n\n  return async (dispatch:any) => {\n      if(window.ethereum){\n        let web3 = new Web3(window.ethereum);\n        const NetworkData = await TestingContract.networks[4];\n        const Testing123Obj = new web3.eth.Contract(\n            TestingContract.abi as any,\n            NetworkData.address\n        );\n\n        console.log(\"Testing123Obj\");\n        console.log(Testing123Obj);\n\n        dispatch(\n          contractSuccess({\n            Testing123: Testing123Obj,\n          })\n        );\n      }else{\n        if (isMobile) {\n              // window.open(\"https://metamask.app.link/dapp/moonwhips.com/\");\n              alert(\"Mobile Device\");\n        }else{  \n           window.alert('Please install MetaMask!');\n        }\n      }\n    }\n};\n\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload:any) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst contractSuccess = (payload:any) => {\n  return {\n    type: \"CONTRACT_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload:any) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload:any) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\n\n\nexport const connect = () => {\n  \n  return async (dispatch:any) => {\n    dispatch(connectRequest());\n\n    if (window.ethereum) {\n        \n      let web3 = new Web3(window.ethereum);\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await window.ethereum.request({\n          method: \"net_version\",\n        });\n        \n        // const NetworkData = await LostStaking.networks[4];\n        if (networkId == 4) {\n          // const MoonlightObj = new web3.eth.Contract(\n          //   Moonlight.abi as any,\n          //   NetworkData.address\n          // );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              // smartContract: MoonlightObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          window.ethereum.on(\"accountsChanged\", (accounts:any) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Mainnet.\"));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n       if (isMobile) {\n        // window.location.href = \"https://metamask.app.link/dapp/moonwhips.com/\";\n        alert(\"Mobile Device\");\n      }else{\n        dispatch(connectFailed(\"Install Metamask.\"));\n      }\n    }\n  };\n};\n\nexport const updateAccount = (account:string) => {\n  return async (dispatch:any) => {\n    dispatch(updateAccountRequest({ account: account }));\n  };\n};\n","export default __webpack_public_path__ + \"static/media/thumb_image.53dda1ac.png\";","export default __webpack_public_path__ + \"static/media/minus.e347c64d.svg\";","export default __webpack_public_path__ + \"static/media/plus.7f3e1b41.svg\";","export default __webpack_public_path__ + \"static/media/Goblin.5d7e9cf5.gif\";","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './DashboardStyle.scss';\nimport { Row , Col , Container, Alert } from \"react-bootstrap\";\nimport { connect, intContract } from \"../../redux/actions/BlockchainActions\";\nimport { ReducerStateIF } from \"../../redux/reducers\";\n// import goblinekdz from \"../../assets/goblinkdz.png\"\nimport goblinekdz from \"../../assets/thumb_image.png\";\nimport minus from \"../../assets/minus.svg\";\nimport plus from \"../../assets/plus.svg\";\nimport goblinGif from \"../../assets/Goblin.gif\";\nimport { isMobile } from 'react-device-detect';\n\ndeclare let window: any;\n\nconst DashboardMain = () => {\n    \n    const dispatch = useDispatch();\n    const blockchain = useSelector((state:ReducerStateIF) => state.blockchain);\n    const [loding, setLoding] = useState(false);\n    const [number, setNumber] = useState(1);\n    const [soldOut, setSoldOut] = useState(false);\n\n    const [amountNft, setamountNft] = useState(0);\n    const [nftprice, setpriceNft] = useState(0);\n    const [totalfree, settotalfree] = useState(0);\n    const [alertMsg, setAlertMsg] = useState({\n        variant:\"\",\n        message:\"\"\n    });\n\n    const increamentNum = () =>{\n        setNumber(number + 1);\n    }\n    const decreamentNum = () =>{\n        if(number > 1){\n            setNumber(number - 1);\n        }\n    }\n\n    useEffect(() => {\n        async function getNftPrice(){\n            const amountNft1 = await blockchain.Testing123.methods.price().call();\n            setpriceNft(Number(amountNft1)/10**18);\n        }\n\n        if(!isMobile){\n            if(blockchain.Testing123 === null){\n                dispatch(intContract());\n            }else{\n                getNftPrice();\n                getTotalSupply();\n                if(blockchain.account != null){\n                    setLoding(false);              \n                }\n            }\n        }else{\n            if (window.ethereum) {\n                if(blockchain.Testing123 === null){\n                    dispatch(intContract());\n                }else{\n                    getNftPrice();\n                    getTotalSupply();\n                    if(blockchain.account != null){\n                        setLoding(false);              \n                    }\n                }   \n            }\n        }\n    },[blockchain]);\n\n    const getTotalSupply = async() => {\n        let totalSupply = await blockchain.Testing123.methods.totalSupply().call();\n        setamountNft(Number(totalSupply));\n\n        let totalfree = await blockchain.Testing123.methods.totalFree().call();\n        settotalfree(Number(totalfree));\n    }\n\n    const mintNft = async() => {\n        if(number > 0){\n\n            // if(!saleStatus){\n            //     alert(\"Minting is temporary off\");\n            //     return false;\n            // }\n\n            if(blockchain.account != null){\n                setLoding(true);\n\n                    let amounts1 = blockchain.web3.utils.toWei((nftprice*number).toString());\n                    const totalfree = await blockchain.Testing123.methods.totalFree().call();\n                    const totalSupply = await blockchain.Testing123.methods.totalSupply().call();\n\n                    if(Number(totalfree) > Number(totalSupply) ){ \n                        amounts1 = blockchain.web3.utils.toWei((0).toString());\n                    }   \n                        \n                    blockchain.Testing123.methods.mint(number.toString()).send({ from: blockchain.account, value: amounts1}).on('transactionHash', function(hash:any){\n                            waitForReceipt(hash, async function(response:any) {\n                                if(response.status){\n                                        setNumber(1);\n                                        getTotalSupply();\n                                        setAlertMsg({\n                                            variant:\"success\",\n                                            message:\"GoblinKdz thanks you\"\n                                        });\n                                }else{\n                                    setAlertMsg({\n                                        variant:\"danger\",\n                                        message:response.msg\n                                    });\n                                } \n                                setLoding(false);\n                            });\n                        }).on('error', function(error:any, receipt:any) {\n                            setAlertMsg({\n                                variant: \"danger\",\n                                message: error.message\n                            });\n                            setLoding(false);\n                        });\n\n            }else{\n                // alert();\n                setAlertMsg({\n                    variant: \"danger\",\n                    message: \"Please Connect with wallet\"\n                });\n            }\n\n        }else{\n            setAlertMsg({\n                variant: \"danger\",\n                message: \"Please select nft amount\"\n            });\n        }\n    }\n\n    const waitForReceipt = async (hash:any, cb:any) => {\n        blockchain.web3.eth.getTransactionReceipt(hash, function (err:any, receipt :any) {\n        if (err) {\n            console.log(err);\n        }  \n    \n        if (receipt !== null) {\n            if (cb) {\n                if(receipt.status == '0x0') {\n                    cb({status:false, msg: \"The contract execution was not successful, check your transaction !\"});\n                } else {\n                    cb({status:true, msg:\"Execution worked fine!\"});\n                }\n            }\n        } else {\n            window.setTimeout(function () {\n                waitForReceipt(hash, cb);\n            }, 1000);\n        }\n        });\n    } \n    \n\n    return(\n        <>\n            <div className=\"dashboard_main\">\n                <Container>\n                    <Row className=\"align-items-center justify-content-center\">\n                        <Col sm={12}  md={4} className=\"text-center\">\n                            <img src={goblinGif} className=\"w-85\"/>\n                        </Col>\n                        <Col sm={12}  md={8} >\n                            \n                            {alertMsg.variant != \"\" && (\n                                <Alert key={1} variant={alertMsg.variant}>\n                                    {alertMsg.message}\n                                </Alert>\n                            )}\n                            \n                            <div className=\"minting_box\" >\n\n                                <p className=\"Nanum-font\">First 1000 free, then .003 eth</p>\n                                <h1 className=\"Nanum-font\">GOBLIN KDZ<br/><span>(what happens when goblingrlz spend time in goblintown)</span></h1>\n\n                                {(blockchain.account != null)?(\n                                    <>\n                                        {!soldOut?(\n                                            <div className=\"text-center minting-box\">\n                                                <div className=\"d-inline-flex\">\n                                                    <h3>{amountNft}/5555</h3>\n                                                    <div className=\"minting_form\" >\n                                                        <button type=\"button\" onClick={decreamentNum} ><img src={minus} alt=\"plus\" /></button>\n                                                            <span>{number} Goblin Kdz</span>\n                                                        <button type=\"button\" onClick={increamentNum} ><img src={plus} alt=\"plus\" /></button>\n                                                    </div>\n                                                    { !loding?(\n                                                        <button className=\"claim_btn ml-30\" onClick={mintNft} >Mint</button>\n                                                    ):(\n                                                        <button className=\"claim_btn ml-30\"  disabled>Wait..</button>\n                                                    )}\n                                                </div>\n                                            </div>\n                                        ):(\n                                            <button className=\"claim_btn mt-25\" disabled>We are sold out!                                            </button>\n                                        )}\n                                    </>\n                                ):(\n                                    <button type=\"button\" className=\"claim_btn mt-25\" onClick={(e) => {\n                                                                    e.preventDefault();\n                                                                    dispatch(connect());\n                                                                }}>Connect with Metamask</button>\n                                )}\n\n                                <div className=\"card\">\n                                    <Row className=\"align-items-center justify-content-center\">\n                                        <Col xs={8} md={8}>\n                                            <p>15% of mint to Feed the Children</p>\n                                            <p>30% of secondary sales to supporting minority & women web3 artists</p>\n                                        </Col>\n                                        <Col xs={4} md={4}>\n                                            <img src={goblinekdz} className=\"w-100\"/>\n                                        </Col>\n                                    </Row>\n                                </div>\n\n                            </div>\n                        </Col>\n                    </Row>\n                    <p className=\"footerText\">goblin kdz is a derivative of two project, <a href=\"goblintown.wtf\" target=\"_blank\">goblintown.wtf</a> & <a href=\"goblingrlz.wtf\" target=\"_blank\">goblingrlz.wtf.</a> <br/>we wouldn't exist without either of them.</p>\n                </Container>\n            </div>\n        </>\n    );\n};\n\nexport default DashboardMain;","import React from \"react\";\nimport { useState } from 'react';\nimport \"./HeaderStyle.scss\";\nimport { Navbar , Container , Nav } from \"react-bootstrap\";\nimport logo from \"../../../assets/logo.png\";\nimport { useSelector } from \"react-redux\";\nimport { ReducerStateIF } from \"../../../redux/reducers\";\n\nconst Header = () => {\n    const [navbarMain, setNavbar] = useState(false);\n    const blockchain = useSelector((state:ReducerStateIF) => state.blockchain);\n    const changeBackground = () =>{\n        if(window.scrollY >= 80){\n            setNavbar(true)\n        } else{\n            setNavbar(false);\n        }\n    };\n    window.addEventListener('scroll', changeBackground);\n    return(\n        <>\n            <div id=\"navbar\" >\n                <nav className=\"navbar navbar-expand-lg\" id=\"myNav\">\n                    <div className=\"container\">\n                        <a className=\"navbar-brand\" href=\"/\">Goblin Kdz</a><button className=\"navbar-toggler\" id=\"moblieToggle\"><i className=\"fas fa-bars\"></i></button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav ml-auto\">\n                                <li className=\"nav-item\">  \n                                    <a className=\"nav-link box_menu_3 socialLinks\" href=\"https://twitter.com/goblinkdzwtf\" target=\"_blank\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"100\" height=\"100\" viewBox=\"0 0 172 172\" style={{fill:\"#000000\"}}><g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode: \"normal\"}}><path d=\"M0,172v-172h172v172z\" fill=\"none\"></path><g fill=\"#ffffff\"><path d=\"M166.44225,41.49231c-5.64106,2.49938 -11.70675,4.16563 -18.10569,4.95306c6.50644,-3.86194 11.51056,-10.02169 13.85944,-17.29944c-6.08719,3.569 -12.83012,6.18931 -20.00575,7.57069c-5.72975,-6.07375 -13.90244,-9.84162 -22.95662,-9.84162c-17.3935,0 -31.48944,13.975 -31.48944,31.20456c0,2.43756 0.28487,4.81331 0.82237,7.11919c-26.1655,-1.31419 -49.37206,-13.75194 -64.89775,-32.62894c-2.72781,4.61175 -4.26238,10.01363 -4.26238,15.71381c0,10.83331 5.547,20.36856 14.00456,25.98813c-5.16269,-0.15856 -10.02169,-1.59369 -14.276,-3.89688c0,0.09406 0,0.23381 0,0.3655c0,15.13869 10.8575,27.74306 25.24906,30.61331c-2.63106,0.72025 -5.40994,1.12069 -8.27481,1.12069c-2.03444,0 -4.01512,-0.23112 -5.934,-0.57512c4.00706,12.37056 15.63319,21.414 29.40662,21.68006c-10.77687,8.35544 -24.34875,13.35956 -39.1085,13.35956c-2.55044,0 -5.04175,-0.14513 -7.50619,-0.44344c13.94006,8.82844 30.49775,14.00456 48.27019,14.00456c57.91294,0 89.59319,-47.558 89.59319,-88.81381c0,-1.35181 -0.043,-2.69825 -0.1075,-4.02856c6.18394,-4.3645 11.51056,-9.87388 15.71919,-16.16531\"></path></g></g></svg> \n                                        <span>Twitter</span>\n                                    </a>\n                                </li>\n                                \n                                {(blockchain.account != null)&&(\n                                    <li className=\"nav-item\">  \n                                        <button type=\"button\" className=\"claim_btn\">Connected with : {blockchain.account.slice(0, 3)+\"...\"+blockchain.account.slice(blockchain.account.length-4)}</button>\n                                    </li>\n                                )}\n\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        </>\n    ); \n}\n\n\nexport default Header;","import DashboardMain from '../../components/Dashboard/DashboardMain';\nimport './DashboardStyle.scss';\nimport Header from '../../components/layout/Header/Header';\n\nconst Dashboard = () => {\n    return (\n        <>\n            <Header />\n            <DashboardMain />\n        </>\n    );\n}\n\nexport default Dashboard;\n","import React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Dashboard from '../screens/Dashboard/Dashboard';\n\nconst AppMain: React.FC<{}> = () => {\n    return (\n        <>\n            <Suspense fallback={<span>loading</span>}>\n                <Switch>\n                    <Route exact path=\"/\" component={Dashboard} />\n                </Switch>\n            </Suspense>\n        </>\n    );\n};\n\nexport default AppMain;\n","import React from 'react';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch  } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'antd/dist/antd.css';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n    <>\n        <Provider store={store}>\n            <BrowserRouter>\n            <Switch>\n                <Routes />\n            </Switch>\n            </BrowserRouter>\n        </Provider>\n    </>\n);\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport \"./font.scss\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
